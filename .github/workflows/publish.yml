name: Publish Release

on:
  push:
    tags:
      - v*

env:
  app_name: nickel2danmaku

jobs:
  exports:
    strategy:
      matrix:
        include:
          - preset: linux
            export_file: nickel2danmaku
          - preset: windows
            export_file: nickel2danmaku.exe
          - preset: macos
            export_file: nickel2danmaku.zip

    name: Export from Godot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set env vars
        env:
          APP_NAME: ${{ env.app_name }}
          PRESET: ${{ matrix.preset }}
        run: |
          version=${GITHUB_REF/refs\/tags\/v/:-}
          echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
          echo "package=${APP_NAME}-v${version}-${PRESET}.zip" >> $GITHUB_ENV
      - name: Export ${{ matrix.preset }} from Godot
        uses: robpc/godot-export-action@v4.0.2
        with:
          preset: ${{ matrix.preset }}
          export_path: build/${{ matrix.preset }}/${{ matrix.export_file }}

      - name: Bundle ${{ matrix.preset }} export
        if: ${{ matrix.preset != 'macos' }}
        uses: montudor/action-zip@v0.1.1
        with:
          args: zip --junk-paths --recurse-paths build/${{ env.package }} build/${{ matrix.preset }}
      - name: Copy ${{ matrix.preset }} bundle
        if: ${{ matrix.preset == 'macos' }}
        uses: canastro/copy-file-action@0.0.2
        with:
          source: build/${{ matrix.preset }}/${{ matrix.export_file }}
          target: build/${{ env.package }}

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/${{ env.package }}

  release:
    runs-on: ubuntu-latest
    needs:
      - exports
    steps:
      - name: Set env vars
        run: |
          echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - uses: actions/download-artifact@v3
        with:
          name: build
      - run: ls -la
      - uses: ncipollo/release-action@v1
        with:
          name: Release v${{ env.version }}
          tag: v${{ env.version }}
          draft: true # for testing
          allowUpdates: true
          artifacts: '*.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
